'use strict';

/** BUDDY BUILT **/

if ('undefined' === typeof self) var self = this;
if ('undefined' === typeof global) var global = self;
var $m = self.$m = self.$m || {};
if ('browser' != 'browser') {
  var $req = require;
  require = function buddyRequire (id) {
    if (!$m[id]) return $req(id);
    if ('function' == typeof $m[id]) $m[id]();
    return $m[id].exports;
  };
} else {
  if ('undefined' === typeof process) var process = {browser:true, env:{NODE_ENV:'development'}};
  self.require = self.require || function buddyRequire (id) {
    if ($m[id]) {
      if ('function' == typeof $m[id]) $m[id]();
      return $m[id].exports;
    }

    if ('development' == 'development') {
      console.warn('module ' + id + ' not found');
    }
  };
}
(function (global) {
  var babelHelpers = global.babelHelpers = {};

  babelHelpers.interopRequireDefault = function (obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  };
})(typeof global === "undefined" ? self : global);

(function () {
/*== js/vendor/util.js ==*/
$m['js/vendor/util'] = { exports: {} };
$m['js/vendor/util'].exports.__esModule = true;
var jsvendorutil__util = {
    each: function each(object, callback) {
        if (Object.prototype.toString.call(object) === '[object Array]') for (var i = 0, l = object.length; i < l; i++) {
            callback(object[i], i, object);
        } else for (var i in object) {
            if (Object.prototype.hasOwnProperty.call(object, i)) callback(object[i], i, object);
        }
    },
    extend: function extend() {
        for (var i = 1, a = arguments, o = a[0], s, p; s = a[i++];) {
            for (p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) o[p] = s[p];
            }
        }return o;
    },
    inherits: function inherits(child, parent) {
        child.prototype = new parent();
        child.prototype.constructor = child;
        child._super_ = parent.prototype;
        return child;
    },
    format: function format(string, object) {
        var o = typeof object === 'object' ? object : arguments;
        return string.replace(/{(.*?)}/g, function (m, n) {
            return typeof o[n] !== 'undefined' ? o[n] : m;
        });
    },
    rand: {
        float: function float(min, max) {
            return Math.random() * (max - min) + min;
        },
        int: function int(min, max) {
            return Math.random() * (max - min + 1) + min | 0;
        },
        item: function item(array) {
            return array[Math.random() * array.length | 0];
        },
        hash: function hash(length) {
            for (var r, s = '', l = length || 1; l--;) {
                s += (r = Math.random() * 62 | 0) < 10 ? r : String.fromCharCode(r + (r < 36 ? 87 : 29));
            }return s;
        }
    },
    math: {
        clamp: function clamp(value, min, max) {
            return value < min ? min : value > max ? max : value;
        },
        mod: function mod(value, min, max) {
            return (value -= min) % (max - min) + (value < 0 ? max : min);
        },
        map: function map(value, min1, max1, min2, max2) {
            return (value - min1) * (max2 - min2) / (max1 - min1) + min2;
        },
        lerp: function lerp(value, min, max) {
            return min + value * (max - min);
        },
        angle: function angle(a, b, full) {
            return 2 * (a = (a < b ? b - a : a - b) % full) > full ? full - a : a;
        }
    },
    str: {
        pad: function pad(string, length, _pad) {
            var s = String(string);
            var l = Math.max(0, Math.abs(length) - s.length);
            var p = new Array(++l).join(_pad != null ? _pad : ' ');
            return length < 0 ? s + p : p + s;
        }
    },
    array: {
        cross: function cross(array, callback) {
            var i,
                j,
                l = array.length;
            for (i = 0; i < l; i++) {
                for (j = i + 1; j < l;) {
                    callback(array[i], array[j], i, j++);
                }
            }return array;
        }
    },
    fn: {
        wrap: function wrap(fn, wrapper) {
            return function () {
                return wrapper.call(this, arguments, fn);
            };
        },
        log: function log(fn, logger) {
            return function () {
                logger.call(this, arguments, fn);
                return fn.apply(this, arguments);
            };
        }
    },
    color: {
        rgba: function rgba(_rgba) {
            if (typeof _rgba !== 'object') _rgba = arguments;
            return 'rgba(' + (_rgba[0] * 255 + 0.5 | 0) + ',' + (_rgba[1] * 255 + 0.5 | 0) + ',' + (_rgba[2] * 255 + 0.5 | 0) + ',' + (_rgba[3] != null ? _rgba[3] : 1).toFixed(3) + ')';
        },
        hsla: function hsla(_hsla) {
            if (typeof _hsla !== 'object') _hsla = arguments;
            return 'hsla(' + (_hsla[0] * 360 + 0.5 | 0) + ',' + (_hsla[1] * 100 + 0.5 | 0) + '%,' + (_hsla[2] * 100 + 0.5 | 0) + '%,' + (_hsla[3] != null ? _hsla[3] : 1).toFixed(3) + ')';
        }
    },
    gradient: function gradient(colors, position) {
        var a,
            b,
            c,
            i,
            l,
            t = position;
        for (i = 0; c = colors[i++];) {
            if (t - c[0] >= 0 && (!a || t - c[0] < t - a[0])) a = c;
            if (t - c[0] <= 0 && (!b || t - c[0] > t - b[0])) b = c;
        }
        t = (t - a[0]) / (b[0] - a[0]) || 0;
        for (c = [], i = 0, l = a[1].length; i < l;) {
            c[i] = a[1][i] + (b[1][i] - a[1][i++]) * t;
        }return c;
    },
    loop: function loop(callback, interval) {
        var n = Date.now(),
            s = n,
            l = n,
            i = 0;
        var loop = function loop() {
            !callback(i++, (n = Date.now()) - s, n - l, l = n) && next();
        };
        var next = interval == null ? requestAnimationFrame.bind(null, loop) : setTimeout.bind(null, loop, interval);
        return loop();
    },
    perf: function perf(times) {
        for (var t, f, j, i = 1, r = []; f = arguments[i++];) {
            t = Date.now();for (j = 0; j < times; f(j++)) {}
            r.push((Date.now() - t) / 1000);
        }
        return r;
    },
    fps: function (h, l, s) {
        return function (int) {
            l = h.push(Date.now()) - 1;
            s = l / (h[l] - h[0]) * 1000 || 0;
            l > s && h.splice(0, ++l - s | 0);
            return int ? s + 0.5 | 0 : s;
        };
    }([]),
    bind: function (fn) {
        return { on: fn.bind('add'), off: fn.bind('remove') };
    }(function (elements, events, listeners, capture) {
        var a = [].concat(elements),
            b = [].concat(events),
            c = [].concat(listeners);
        for (var k, j, i = 0; a[i]; i++) {
            for (j = 0; b[j]; j++) {
                for (k = 0; c[k]; k++) {
                    a[i][this + 'EventListener'](b[j], c[k], capture);
                }
            }
        }
    }),
    ajax: function (fn) {
        return { get: fn.bind(0), post: fn.bind(1) };
    }(function (url, data, callback, timeout) {
        var p,
            q = '',
            xhr = new XMLHttpRequest();
        for (p in data) {
            if (data.hasOwnProperty(p)) q += '&' + [p, data[p]].map(encodeURIComponent).join('=');
        }if (q && !this) url += ~url.indexOf('?') ? q : q.replace('&', '?');
        xhr.open(this ? 'POST' : 'GET', url, true);
        xhr.timeout = timeout ? timeout * 1000 : 0;
        xhr.onreadystatechange = function () {
            this.readyState === 4 && callback(this.response, this);
        };
        if (!url.match(/^(https?:)?\/\//i)) {
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        }
        xhr.send(this && q ? q.substr(1) : null);
        return xhr;
    }),
    load: {
        docs: function docs(list, callback, progress) {
            var item,
                i,
                j = 0,
                e = function e() {
                if (this.readyState !== 4) return;
                list[list.indexOf(this)] = this.response;
                j++;progress && progress(j, list.length);
                j === list.length && callback(list);
            };
            progress && progress(0, list.length);
            for (i = 0; i < list.length; i++) {
                item = new XMLHttpRequest();
                item.onreadystatechange = e;
                item.open('GET', list[i], true);
                item.send(null);
                list[i] = item;
            }
            return list;
        },
        imgs: function imgs(list, callback, progress) {
            var item,
                i,
                j = 0,
                e = function e() {
                j++;progress && progress(j, list.length);
                j === list.length && callback(list);
            };
            progress && progress(0, list.length);
            for (i = 0; i < list.length; i++) {
                item = new Image();
                item.onload = e;
                item.src = list[i];
                list[i] = item;
            }
            return list;
        }
    },
    select: function select(selector, where) {
        if (selector = /(^[.#]?)([\w-]+$)/.exec(selector)) switch (selector[1]) {
            case '#':
                return (where || document).getElementById(selector[2]);
            case '.':
                return (where || document).getElementsByClassName(selector[2]);
            default:
                return (where || document).getElementsByTagName(selector[2]);
        } else return (where || document).querySelectorAll(selector);
    },
    tag: function tag(element, options, target, prepend) {
        var e = element,
            o = options,
            i = e || '',
            j;
        if (e == null || e.nodeType == null) {
            e = document.createElement(String(i.match(/^[^#.]+/) || 'div'));
            if (j = i.match(/#([^#.]+)/)) e.id = j[1];
            if (j = i.match(/\.[^#.]+/g)) e.className = j.join(' ').replace(/\./g, '');
        }
        if (o != null) if (o.nodeType != null) e.appendChild(o);else if (typeof o !== 'object') e.textContent = o;else if (o[i = 0]) while (o[i]) {
            e.appendChild(o[i++]);
        } else for (i in o) {
            if (o.hasOwnProperty(i)) e[i] = o[i];
        }if (target) if (!prepend) target.appendChild(e);else target.insertBefore(e, target.firstChild);
        return e;
    },
    breadcrump: function breadcrump(element, url, sub, last, separator) {
        url = decodeURI(url || location.href);
        url = url.match(/[^?#]+/)[0].split('/');
        sub = /^[\d.]+$/.test(url[2]) ? 0 : sub;
        var e,
            i,
            host = url[2].split('.');
        while (host.length) {
            e = document.createElement('a');
            e.href = url[0] + '//' + host.join('.') + '/';
            e.textContent = sub && host.length > sub && host[0] !== 'www' ? host.splice(0, 1) + '.' : host.splice(0).join('.');
            element.appendChild(e);
        }
        for (i = 3; url[i]; i++) {
            element.appendChild(document.createTextNode(separator || ' › '));
            e = document.createElement(!url[i + 1] && !last ? 'span' : 'a');
            if ('href' in e) e.href = encodeURI(url.slice(0, i + 1).join('/'));
            if ('href' in e && url[i + 1] != null) e.href += '/';
            e.textContent = url[i];
            element.appendChild(e);
        }
        return element;
    },
    form: function form(_form) {
        var i,
            e,
            o = {},
            c = _form.querySelectorAll('*');
        for (i = 0; e = c[i]; i++) {
            if (e.name) switch (e.type) {
                case 'radio':
                    if (e.checked) o[e.name] = e.value;break;
                case 'checkbox':
                    o[e.name] = e.checked ? 1 : 0;break;
                default:
                    o[e.name] = e.value;break;
            }
        }return o;
    },
    favicon: function favicon(url) {
        var e = document.head.querySelector('link[rel*=icon]');
        e && document.head.removeChild(e);
        e = document.createElement('link');
        e.rel = 'shortcut icon';e.href = url;
        document.head.appendChild(e);
    }
};

$m['js/vendor/util'].exports.default = jsvendorutil__util;
/*≠≠ js/vendor/util.js ≠≠*/


/*== js/vendor/vec4.js ==*/
$m['js/vendor/vec4'] = { exports: {} };
$m['js/vendor/vec4'].exports.__esModule = true;
var jsvendorvec4__vec4 = {};

jsvendorvec4__vec4.array = Float32Array || Array;
jsvendorvec4__vec4.buffer = new jsvendorvec4__vec4.array(4);

jsvendorvec4__vec4.get = function (a, b, c, d) {
    return jsvendorvec4__vec4.set(new jsvendorvec4__vec4.array(4), a, b, c, d);
};

jsvendorvec4__vec4.set = function (out, a, b, c, d) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof a === 'object') {
        out[0] = -Infinity < a[0] && a[0] < Infinity ? a[0] : 0;
        out[1] = -Infinity < a[1] && a[1] < Infinity ? a[1] : 0;
        out[2] = -Infinity < a[2] && a[2] < Infinity ? a[2] : 0;
        out[3] = -Infinity < a[3] && a[3] < Infinity ? a[3] : 1;
    } else {
        out[0] = -Infinity < a && a < Infinity ? a : 0;
        out[1] = -Infinity < b && b < Infinity ? b : 0;
        out[2] = -Infinity < c && c < Infinity ? c : 0;
        out[3] = -Infinity < d && d < Infinity ? d : 1;
    }
    return out;
};

jsvendorvec4__vec4.equals = function (a, b) {
    if (a === b) return true;
    return typeof b === 'object' ? a[0] === b[0] && a[1] === b[1] && a[2] === b[2] : a[0] === b && a[1] === b && a[2] === b;
};

jsvendorvec4__vec4.add = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] + b[0];
        out[1] = a[1] + b[1];
        out[2] = a[2] + b[2];
    } else {
        out[0] = a[0] + b;
        out[1] = a[1] + b;
        out[2] = a[2] + b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.sub = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] - b[0];
        out[1] = a[1] - b[1];
        out[2] = a[2] - b[2];
    } else {
        out[0] = a[0] - b;
        out[1] = a[1] - b;
        out[2] = a[2] - b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.mul = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] * b[0];
        out[1] = a[1] * b[1];
        out[2] = a[2] * b[2];
    } else {
        out[0] = a[0] * b;
        out[1] = a[1] * b;
        out[2] = a[2] * b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.div = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] / b[0];
        out[1] = a[1] / b[1];
        out[2] = a[2] / b[2];
    } else {
        out[0] = a[0] / b;
        out[1] = a[1] / b;
        out[2] = a[2] / b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.mod = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] % b[0];
        out[1] = a[1] % b[1];
        out[2] = a[2] % b[2];
    } else {
        out[0] = a[0] % b;
        out[1] = a[1] % b;
        out[2] = a[2] % b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.min = function (a, min, out) {
    if (typeof min === 'undefined') return Math.min(a[0], a[1], a[2]);
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof min === 'object') {
        out[0] = a[0] < min[0] ? min[0] : a[0];
        out[1] = a[1] < min[1] ? min[1] : a[1];
        out[2] = a[2] < min[2] ? min[2] : a[2];
    } else {
        out[0] = a[0] < min ? min : a[0];
        out[1] = a[1] < min ? min : a[1];
        out[2] = a[2] < min ? min : a[2];
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.max = function (a, max, out) {
    if (typeof max === 'undefined') return Math.max(a[0], a[1], a[2]);
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof max === 'object') {
        out[0] = a[0] > max[0] ? max[0] : a[0];
        out[1] = a[1] > max[1] ? max[1] : a[1];
        out[2] = a[2] > max[2] ? max[2] : a[2];
    } else {
        out[0] = a[0] > max ? max : a[0];
        out[1] = a[1] > max ? max : a[1];
        out[2] = a[2] > max ? max : a[2];
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.clamp = function (a, min, max, out) {
    return jsvendorvec4__vec4.max(jsvendorvec4__vec4.min(a, min, jsvendorvec4__vec4.buffer), max, out);
};

jsvendorvec4__vec4.sum = function (a) {
    return a[0] + a[1] + a[2];
};

jsvendorvec4__vec4.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};

jsvendorvec4__vec4.cross = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    out[0] = a[1] * b[2] - a[2] * b[1];
    out[1] = a[2] * b[0] - a[0] * b[2];
    out[2] = a[0] * b[1] - a[1] * b[0];
    return out[3] = 1, out;
};

jsvendorvec4__vec4.unit = function (a, out) {
    var l = Math.sqrt(jsvendorvec4__vec4.dot(a, a));
    return jsvendorvec4__vec4.mul(a, l ? 1 / l : 0, out);
};

jsvendorvec4__vec4.length = function (a, length, out) {
    var l = Math.sqrt(jsvendorvec4__vec4.dot(a, a));
    if (typeof length === 'undefined') return l;
    return jsvendorvec4__vec4.mul(a, l ? length / l : 0, out);
};

jsvendorvec4__vec4.length2 = function (a, length, out) {
    var l = jsvendorvec4__vec4.dot(a, a);
    if (typeof length === 'undefined') return l;
    return jsvendorvec4__vec4.mul(a, l ? length / l : 0, out);
};

jsvendorvec4__vec4.distance = function (a, b) {
    return jsvendorvec4__vec4.length(jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer));
};

jsvendorvec4__vec4.distance2 = function (a, b) {
    return jsvendorvec4__vec4.dot(jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer), jsvendorvec4__vec4.buffer);
};

jsvendorvec4__vec4.lerp = function (a, b, t, out) {
    jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer);
    jsvendorvec4__vec4.mul(jsvendorvec4__vec4.buffer, t, jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.add(a, jsvendorvec4__vec4.buffer, out);
};

jsvendorvec4__vec4.project = function (a, b, out) {
    return jsvendorvec4__vec4.mul(b, jsvendorvec4__vec4.dot(a, b) / jsvendorvec4__vec4.dot(b, b), out);
};

jsvendorvec4__vec4.mirror = function (a, normal, out) {
    jsvendorvec4__vec4.mul(normal, 2 * jsvendorvec4__vec4.dot(a, normal), jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.sub(jsvendorvec4__vec4.buffer, a, out);
};

jsvendorvec4__vec4.reflect = function (a, normal, out) {
    jsvendorvec4__vec4.mul(normal, 2 * jsvendorvec4__vec4.dot(a, normal), jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.sub(a, jsvendorvec4__vec4.buffer, out);
};

jsvendorvec4__vec4.random = function (radius, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof radius === 'undefined') radius = 1;
    var t = Math.acos(Math.random() * 2 - 1);
    var p = Math.random() * Math.PI * 2;
    out[0] = radius * Math.sin(t) * Math.cos(p);
    out[1] = radius * Math.sin(t) * Math.sin(p);
    out[2] = radius * Math.cos(t);
    return out[3] = 1, out;
};

jsvendorvec4__vec4.each = function (a, callback, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    out[0] = callback(a[0], 0);
    out[1] = callback(a[1], 1);
    out[2] = callback(a[2], 2);
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.transform = function (v, m, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    var a = v[0],
        b = v[1],
        c = v[2],
        d = v[3];
    out[0] = a * m[0] + b * m[1] + c * m[2] + d * m[3];
    out[1] = a * m[4] + b * m[5] + c * m[6] + d * m[7];
    out[2] = a * m[8] + b * m[9] + c * m[10] + d * m[11];
    out[3] = a * m[12] + b * m[13] + c * m[14] + d * m[15];
    return out;
};

$m['js/vendor/vec4'].exports.default = jsvendorvec4__vec4;
/*≠≠ js/vendor/vec4.js ≠≠*/


/*== node_modules/simplex-noise/simplex-noise.js ==*/
$m['simplex-noise'] = { exports: {} };
/*
 * A fast javascript implementation of simplex noise by Jonas Wagner
 *
 * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.
 * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 *
 *
 * Copyright (C) 2016 Jonas Wagner
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */
(function () {

  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);
  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;
  var F3 = 1.0 / 3.0;
  var G3 = 1.0 / 6.0;
  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;
  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;

  function SimplexNoise(random) {
    if (!random) random = Math.random;
    this.p = buildPermutationTable(random);
    this.perm = new Uint8Array(512);
    this.permMod12 = new Uint8Array(512);
    for (var i = 0; i < 512; i++) {
      this.perm[i] = this.p[i & 255];
      this.permMod12[i] = this.perm[i] % 12;
    }
  }
  SimplexNoise.prototype = {
    grad3: new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1]),
    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1, -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1, 1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),
    noise2D: function (xin, yin) {
      var permMod12 = this.permMod12;
      var perm = this.perm;
      var grad3 = this.grad3;
      var n0 = 0; // Noise contributions from the three corners
      var n1 = 0;
      var n2 = 0;
      // Skew the input space to determine which simplex cell we're in
      var s = (xin + yin) * F2; // Hairy factor for 2D
      var i = Math.floor(xin + s);
      var j = Math.floor(yin + s);
      var t = (i + j) * G2;
      var X0 = i - t; // Unskew the cell origin back to (x,y) space
      var Y0 = j - t;
      var x0 = xin - X0; // The x,y distances from the cell origin
      var y0 = yin - Y0;
      // For the 2D case, the simplex shape is an equilateral triangle.
      // Determine which simplex we are in.
      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords
      if (x0 > y0) {
        i1 = 1;
        j1 = 0;
      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)
      else {
          i1 = 0;
          j1 = 1;
        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)
      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and
      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where
      // c = (3-sqrt(3))/6
      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords
      var y1 = y0 - j1 + G2;
      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords
      var y2 = y0 - 1.0 + 2.0 * G2;
      // Work out the hashed gradient indices of the three simplex corners
      var ii = i & 255;
      var jj = j & 255;
      // Calculate the contribution from the three corners
      var t0 = 0.5 - x0 * x0 - y0 * y0;
      if (t0 >= 0) {
        var gi0 = permMod12[ii + perm[jj]] * 3;
        t0 *= t0;
        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient
      }
      var t1 = 0.5 - x1 * x1 - y1 * y1;
      if (t1 >= 0) {
        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;
        t1 *= t1;
        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);
      }
      var t2 = 0.5 - x2 * x2 - y2 * y2;
      if (t2 >= 0) {
        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;
        t2 *= t2;
        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);
      }
      // Add contributions from each corner to get the final noise value.
      // The result is scaled to return values in the interval [-1,1].
      return 70.0 * (n0 + n1 + n2);
    },
    // 3D simplex noise
    noise3D: function (xin, yin, zin) {
      var permMod12 = this.permMod12;
      var perm = this.perm;
      var grad3 = this.grad3;
      var n0, n1, n2, n3; // Noise contributions from the four corners
      // Skew the input space to determine which simplex cell we're in
      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D
      var i = Math.floor(xin + s);
      var j = Math.floor(yin + s);
      var k = Math.floor(zin + s);
      var t = (i + j + k) * G3;
      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space
      var Y0 = j - t;
      var Z0 = k - t;
      var x0 = xin - X0; // The x,y,z distances from the cell origin
      var y0 = yin - Y0;
      var z0 = zin - Z0;
      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.
      // Determine which simplex we are in.
      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords
      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords
      if (x0 >= y0) {
        if (y0 >= z0) {
          i1 = 1;
          j1 = 0;
          k1 = 0;
          i2 = 1;
          j2 = 1;
          k2 = 0;
        } // X Y Z order
        else if (x0 >= z0) {
            i1 = 1;
            j1 = 0;
            k1 = 0;
            i2 = 1;
            j2 = 0;
            k2 = 1;
          } // X Z Y order
          else {
              i1 = 0;
              j1 = 0;
              k1 = 1;
              i2 = 1;
              j2 = 0;
              k2 = 1;
            } // Z X Y order
      } else {
        // x0<y0
        if (y0 < z0) {
          i1 = 0;
          j1 = 0;
          k1 = 1;
          i2 = 0;
          j2 = 1;
          k2 = 1;
        } // Z Y X order
        else if (x0 < z0) {
            i1 = 0;
            j1 = 1;
            k1 = 0;
            i2 = 0;
            j2 = 1;
            k2 = 1;
          } // Y Z X order
          else {
              i1 = 0;
              j1 = 1;
              k1 = 0;
              i2 = 1;
              j2 = 1;
              k2 = 0;
            } // Y X Z order
      }
      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),
      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and
      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where
      // c = 1/6.
      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords
      var y1 = y0 - j1 + G3;
      var z1 = z0 - k1 + G3;
      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords
      var y2 = y0 - j2 + 2.0 * G3;
      var z2 = z0 - k2 + 2.0 * G3;
      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords
      var y3 = y0 - 1.0 + 3.0 * G3;
      var z3 = z0 - 1.0 + 3.0 * G3;
      // Work out the hashed gradient indices of the four simplex corners
      var ii = i & 255;
      var jj = j & 255;
      var kk = k & 255;
      // Calculate the contribution from the four corners
      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;
      if (t0 < 0) n0 = 0.0;else {
        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;
        t0 *= t0;
        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);
      }
      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;
      if (t1 < 0) n1 = 0.0;else {
        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;
        t1 *= t1;
        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);
      }
      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;
      if (t2 < 0) n2 = 0.0;else {
        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;
        t2 *= t2;
        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);
      }
      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;
      if (t3 < 0) n3 = 0.0;else {
        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;
        t3 *= t3;
        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);
      }
      // Add contributions from each corner to get the final noise value.
      // The result is scaled to stay just inside [-1,1]
      return 32.0 * (n0 + n1 + n2 + n3);
    },
    // 4D simplex noise, better simplex rank ordering method 2012-03-09
    noise4D: function (x, y, z, w) {
      var permMod12 = this.permMod12;
      var perm = this.perm;
      var grad4 = this.grad4;

      var n0, n1, n2, n3, n4; // Noise contributions from the five corners
      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in
      var s = (x + y + z + w) * F4; // Factor for 4D skewing
      var i = Math.floor(x + s);
      var j = Math.floor(y + s);
      var k = Math.floor(z + s);
      var l = Math.floor(w + s);
      var t = (i + j + k + l) * G4; // Factor for 4D unskewing
      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space
      var Y0 = j - t;
      var Z0 = k - t;
      var W0 = l - t;
      var x0 = x - X0; // The x,y,z,w distances from the cell origin
      var y0 = y - Y0;
      var z0 = z - Z0;
      var w0 = w - W0;
      // For the 4D case, the simplex is a 4D shape I won't even try to describe.
      // To find out which of the 24 possible simplices we're in, we need to
      // determine the magnitude ordering of x0, y0, z0 and w0.
      // Six pair-wise comparisons are performed between each possible pair
      // of the four coordinates, and the results are used to rank the numbers.
      var rankx = 0;
      var ranky = 0;
      var rankz = 0;
      var rankw = 0;
      if (x0 > y0) rankx++;else ranky++;
      if (x0 > z0) rankx++;else rankz++;
      if (x0 > w0) rankx++;else rankw++;
      if (y0 > z0) ranky++;else rankz++;
      if (y0 > w0) ranky++;else rankw++;
      if (z0 > w0) rankz++;else rankw++;
      var i1, j1, k1, l1; // The integer offsets for the second simplex corner
      var i2, j2, k2, l2; // The integer offsets for the third simplex corner
      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner
      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.
      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w
      // impossible. Only the 24 indices which have non-zero entries make any sense.
      // We use a thresholding to set the coordinates in turn from the largest magnitude.
      // Rank 3 denotes the largest coordinate.
      i1 = rankx >= 3 ? 1 : 0;
      j1 = ranky >= 3 ? 1 : 0;
      k1 = rankz >= 3 ? 1 : 0;
      l1 = rankw >= 3 ? 1 : 0;
      // Rank 2 denotes the second largest coordinate.
      i2 = rankx >= 2 ? 1 : 0;
      j2 = ranky >= 2 ? 1 : 0;
      k2 = rankz >= 2 ? 1 : 0;
      l2 = rankw >= 2 ? 1 : 0;
      // Rank 1 denotes the second smallest coordinate.
      i3 = rankx >= 1 ? 1 : 0;
      j3 = ranky >= 1 ? 1 : 0;
      k3 = rankz >= 1 ? 1 : 0;
      l3 = rankw >= 1 ? 1 : 0;
      // The fifth corner has all coordinate offsets = 1, so no need to compute that.
      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords
      var y1 = y0 - j1 + G4;
      var z1 = z0 - k1 + G4;
      var w1 = w0 - l1 + G4;
      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords
      var y2 = y0 - j2 + 2.0 * G4;
      var z2 = z0 - k2 + 2.0 * G4;
      var w2 = w0 - l2 + 2.0 * G4;
      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords
      var y3 = y0 - j3 + 3.0 * G4;
      var z3 = z0 - k3 + 3.0 * G4;
      var w3 = w0 - l3 + 3.0 * G4;
      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords
      var y4 = y0 - 1.0 + 4.0 * G4;
      var z4 = z0 - 1.0 + 4.0 * G4;
      var w4 = w0 - 1.0 + 4.0 * G4;
      // Work out the hashed gradient indices of the five simplex corners
      var ii = i & 255;
      var jj = j & 255;
      var kk = k & 255;
      var ll = l & 255;
      // Calculate the contribution from the five corners
      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;
      if (t0 < 0) n0 = 0.0;else {
        var gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32 * 4;
        t0 *= t0;
        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);
      }
      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;
      if (t1 < 0) n1 = 0.0;else {
        var gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32 * 4;
        t1 *= t1;
        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);
      }
      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;
      if (t2 < 0) n2 = 0.0;else {
        var gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32 * 4;
        t2 *= t2;
        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);
      }
      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;
      if (t3 < 0) n3 = 0.0;else {
        var gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32 * 4;
        t3 *= t3;
        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);
      }
      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;
      if (t4 < 0) n4 = 0.0;else {
        var gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32 * 4;
        t4 *= t4;
        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);
      }
      // Sum up and scale the result to cover the range [-1,1]
      return 27.0 * (n0 + n1 + n2 + n3 + n4);
    }
  };

  function buildPermutationTable(random) {
    var i;
    var p = new Uint8Array(256);
    for (i = 0; i < 256; i++) {
      p[i] = i;
    }
    for (i = 0; i < 255; i++) {
      var r = i + 1 + ~~(random() * (255 - i));
      var aux = p[i];
      p[i] = p[r];
      p[r] = aux;
    }
    return p;
  }
  SimplexNoise._buildPermutationTable = buildPermutationTable;

  // amd
  if (typeof define !== 'undefined' && define.amd) define(function () {
    return SimplexNoise;
  });
  // common js
  if (typeof $m['simplex-noise'].exports !== 'undefined') $m['simplex-noise'].exports.SimplexNoise = SimplexNoise;
  // browser
  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;
  // nodejs
  if (typeof $m['simplex-noise'] !== 'undefined') {
    $m['simplex-noise'].exports = SimplexNoise;
  }
})();
/*≠≠ node_modules/simplex-noise/simplex-noise.js ≠≠*/


/*== js/main.js ==*/
$m['js/main'] = { exports: {} };
var jsmain___simplexNoise = $m['simplex-noise'].exports;

var jsmain___simplexNoise2 = babelHelpers.interopRequireDefault(jsmain___simplexNoise);

var jsmain___vec = $m['js/vendor/vec4'].exports;

var jsmain___vec2 = babelHelpers.interopRequireDefault(jsmain___vec);

var jsmain___util = $m['js/vendor/util'].exports;

var jsmain___util2 = babelHelpers.interopRequireDefault(jsmain___util);


var jsmain__scrollHelper = {
	easeInOut: function easeInOut(currentTime, start, change, duration) {
		currentTime /= duration / 2;
		if (currentTime < 1) {
			return change / 2 * currentTime * currentTime + start;
		}
		currentTime -= 1;
		return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;
	},

	scrollTo: function scrollTo(to, duration) {
		var start = window.pageYOffset,
		    change = to - start,
		    increment = 20;

		if (duration === 0) {
			window.scrollTo(0, to);
			return;
		}

		var animateScroll = function animateScroll(elapsedTime) {
			elapsedTime += increment;
			var position = jsmain__scrollHelper.easeInOut(elapsedTime, start, change, duration);
			window.scrollTo(0, position);
			if (elapsedTime < duration) {
				requestAnimationFrame(function () {
					animateScroll(elapsedTime);
				});
			}
		};

		animateScroll(0);
	}
};

var jsmain___s = function jsmain___s(selector, context) {
	var d = context || document;
	return Array.apply(null, d.querySelectorAll(selector));
};

var jsmain___si = function jsmain___si(selector, context, returnNull) {
	var d = context || document;
	var tmp = d.querySelector(selector);
	return tmp ? tmp : returnNull ? null : document.createElement('div');
};

var jsmain___ael = function jsmain___ael(selector, ev, callback) {
	var elm = typeof selector === 'string' ? jsmain___si(selector) : selector;
	elm.addEventListener(ev, callback);
};

var jsmain___ajax = function jsmain___ajax(url, callback) {
	var request = new XMLHttpRequest();
	request.open('GET', url, true);

	request.onload = function () {
		if (request.status >= 200 && request.status < 400) {
			if (typeof callback === 'function') {
				callback(request);
			}
		} else {
			console.error('request error', request);
		}
	};

	request.onerror = function (err) {
		console.error('error', err);
	};

	request.send();
};

var jsmain__loadJSONP = function () {
	var unique = 0;
	return function (url, callback, context) {
		// INIT
		var name = "_jsonp_" + unique++;
		if (url.match(/\?/)) url += "&callback=" + name;else url += "?callback=" + name;

		// Create script
		var script = document.createElement('script');
		script.type = 'text/javascript';
		script.src = url;

		// Setup handler
		window[name] = function (data) {
			callback.call(context || window, data);
			document.getElementsByTagName('head')[0].removeChild(script);
			script = null;
			delete window[name];
		};

		// Load JSON
		document.getElementsByTagName('head')[0].appendChild(script);
	};
}();

(function () {
	var oldScrollTop = 0;
	var scrollTop = window.pageYOffset;
	var lowFpsCount = 0;
	var html = jsmain___si('html'),
	    sections = jsmain___s('[data-link-url]'),
	    sectionTops = [],
	    phoneMenu = window.innerWidth < 635,
	    menuHeight = phoneMenu ? 0 : 70,
	    sizes = {
		showMenu: 635
	},
	    window_width = window.innerWidth,
	    logo = jsmain___si('.logo'),
	    logoTop = logo.getBoundingClientRect().top + scrollTop,
	    startup = Date.now();

	function render() {
		if (scrollTop !== oldScrollTop) {
			if (sectionTops.length === 0) {
				sections.forEach(function (s) {
					sectionTops.push(s.getBoundingClientRect().top + scrollTop - menuHeight);
				});
			}
			if (scrollTop > logoTop + 20) {
				html.classList.add('toggle--logo-in-menu');
			} else {
				html.classList.remove('toggle--logo-in-menu');
			}

			var lis = jsmain___s('nav li');
			for (var i = sectionTops.length; i--;) {
				if (scrollTop > sectionTops[i]) {
					var li = lis[i];
					if (li && !li.classList.contains('active')) {
						jsmain___si('nav li.active').classList.remove('active');
						li.classList.add('active');
						var url = jsmain___si('a', li).href;
						url = url.substr(url.indexOf('#'));
						location.hash = url;
					}
					break;
				}
			}
			oldScrollTop = scrollTop;
		}

		requestAnimationFrame(render);
	}

	if (window_width >= sizes.showMenu) {
		render();
	}

	jsmain___ael(document, 'scroll', function (e) {
		scrollTop = window.pageYOffset;
	});

	jsmain___ael('.menu_toggle', 'click', function () {
		html.classList.toggle('show--menu');
	});

	jsmain___ael('nav', 'click', function (e) {
		var li = e.target.closest('li');
		if (li) {
			var url = jsmain___si('a', li).href;
			url = url.substr(url.indexOf('#') + 1);
			var section = jsmain___si('[data-link-url="' + url + '"]');
			jsmain__scrollHelper.scrollTo(section.getBoundingClientRect().top + scrollTop + 1, 300);
			html.classList.remove('show--menu');
		}
	});

	jsmain___ael('.logo', 'click', function (e) {
		jsmain__scrollHelper.scrollTo(0, 300);
	});

	if (location.hash.length > 2) {
		jsmain___si('nav a[href*="' + location.hash + '"]').click();
	}

	jsmain___ael('.block--conduct .toggle-extra', 'click', function (e) {
		e.preventDefault();
		this.closest('.block').classList.toggle('open');
	});

	/* ekte ajax *
 _ajax('https://api.trondheimdc.no/events/tdc2017/sessions', function() {
 	loadSpeakers(JSON.parse(data.responseText));
 });
 /* */
	function loadSpeakers(speakers) {
		var fallbackImg = '//placehold.it/360x240/117fe8/fff';
		var listHtml = '';
		speakers.forEach(function (sessh) {
			var img = sessh.foredragsholdere[0].bildeUri || fallbackImg;
			var name = sessh.foredragsholdere[0].navn;
			var title = sessh.tittel;
			listHtml += '<li>\n\t\t\t\t\t\t\t<img src="' + img + '">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>' + name + '</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>';
		});

		jsmain___si('.block--speakers ul').innerHTML = listHtml;
	}

	/* fake ajax */
	loadSpeakers([{
		"tittel": "Do or don't. There's no try. Or is there? The power of monads explained. Sort of",
		"foredragsholdere": [{
			"navn": "Sander Hoogendoorn",
			"bildeUri": "https://api.trondheimdc.no/speakers/e9eb9e151cb82630194e9b13ebe779dd242ad42b35e774580baa3975ffd2677d/image?size=240"
		}]
	}, {
		"tittel": "Getting started with Java 9 modules",
		"foredragsholdere": [{
			"navn": "Rafael Winterhalter",
			"bildeUri": "https://secure.gravatar.com/avatar/bc96521f79789d75fa63cfa5c2758765?s=180"
		}]
	}, {
		"tittel": "Continuously delivering continuous delivery",
		"foredragsholdere": [{
			"navn": "Kim van Wilgen",
			"bildeUri": "https://secure.gravatar.com/avatar/32f9be308b887028f42c6baa4235fc5c?s=180"
		}]
	}, {
		"tittel": "In a Nutshell: Immutable Objects in Java",
		"foredragsholdere": [{
			"navn": "Marcus Biel",
			"bildeUri": "https://static.trondheimdc.no/2017/Marcus_Biel.png"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Martha Eike",
			"bildeUri": "https://static.trondheimdc.no/uploads/2015/09/Martha_Eike-Portrett.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Tarjei Vassbotn Sigve Tjora",
			"bildeUri": "https://static.trondheimdc.no/2017/tarjei-vassbotn.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Brian Christian",
			"bildeUri": "https://static.trondheimdc.no/2017/brian-christian.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Preethi Kasireddy",
			"bildeUri": "https://static.trondheimdc.no/2017/Preethi_Kasireddy.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Eirik Backer",
			"bildeUri": "https://static.trondheimdc.no/2017/Eirik_Backer.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Axel Tideman",
			"bildeUri": "https://static.trondheimdc.no/2017/Axel_Tideman.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Berit Alvestrand",
			"bildeUri": "https://static.trondheimdc.no/2017/Berit_Alvestrand.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Jonas Follesø",
			"bildeUri": "https://static.trondheimdc.no/2017/Jonas_Folleso.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Erik Engheim",
			"bildeUri": "https://static.trondheimdc.no/2017/Erik_Engheim.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Robert Engels",
			"bildeUri": "https://static.trondheimdc.no/2017/Robert_Engels.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Robert Virding",
			"bildeUri": "https://static.trondheimdc.no/2017/Robert_Virding.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Francis Paulin",
			"bildeUri": "https://static.trondheimdc.no/2017/Francis_Paulin.jpg"
		}]
	}, {
		"tittel": "",
		"foredragsholdere": [{
			"navn": "Mozhgan Tavakolifard",
			"bildeUri": "https://static.trondheimdc.no/2017/Mozhgan_Tavakolifard.jpg"
		}]
	}]);

	jsmain__loadJSONP('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=00622ccfe6e4d518ca49b0b5105abb54&per_page=20&user_id=trondheimdc&tags=Approved&page=2&extras=o_dims&format=json');

	function Mouse(element, callback) {
		this.callback = callback;
		this.element = element;
		this.handler = this.handler.bind(this);
		this.L = this.M = this.R = this.X = this.Y = 0;
		window.addEventListener('mousedown', this.handler);
		window.addEventListener('mouseup', this.handler);
		window.addEventListener('mousemove', this.handler);
	}

	Mouse.prototype.map = { 0: 'L', 1: 'M', 2: 'R' };

	Mouse.prototype.handler = function (e) {
		var b = this.element.getBoundingClientRect();
		this.X = e.clientX - b.left;
		this.Y = e.clientY - b.top;
		switch (e.type) {
			case 'contextmenu':
				e.preventDefault();break;
			case 'mousedown':
				this[this.map[e.button]] = 1;break;
			case 'mouseup':
				this[this.map[e.button]] = 0;break;
		}
		this.callback && this.callback(e);
	};

	function Particle(field, x, y) {
		this.field = field;
		this.l = jsmain___vec2.default.get(x, y);
		this.p = jsmain___vec2.default.get(x, y);
		this.v = jsmain___vec2.default.get();
	}

	Particle.prototype.reset = function (x, y) {
		if (x == null || y == null) if (Math.random() < 0.5) {
			x = this.field.width * Math.random();
			y = this.field.height * (Math.random() + 0.5 | 0);
		} else {
			x = this.field.width * (Math.random() + 0.5 | 0);
			y = this.field.height * Math.random();
		}

		jsmain___vec2.default.set(this.l, x, y);
		jsmain___vec2.default.set(this.p, x, y);
		jsmain___vec2.default.set(this.v);
	};

	Particle.prototype.outOfBounds = function () {
		return this.p[0] < 0 || this.p[0] > this.field.width || this.p[1] < 0 || this.p[1] > this.field.height;
	};

	Particle.prototype.update = function () {
		if (this.outOfBounds()) return;

		var x = 0.00550 * this.p[0];
		var y = 0.00550 * this.p[1];
		var z = 0.0001 * this.field.now;
		var r = Math.random() * 0.5;
		var t = Math.random() * Math.PI * 2;

		jsmain___vec2.default.set(jsmain___vec2.default.buffer, r * Math.sin(t) + this.field.simplex.noise3D(x, y, +z), r * Math.cos(t) + this.field.simplex.noise3D(x, y, -z));
		jsmain___vec2.default.add(this.v, jsmain___vec2.default.buffer, this.v);

		if (this.field.mouse.L) {
			jsmain___vec2.default.set(jsmain___vec2.default.buffer, this.field.mouse.X, this.field.mouse.Y);
			jsmain___vec2.default.sub(jsmain___vec2.default.buffer, this.p, jsmain___vec2.default.buffer);
			jsmain___vec2.default.mul(jsmain___vec2.default.buffer, 0.0010, jsmain___vec2.default.buffer);
			jsmain___vec2.default.add(this.v, jsmain___vec2.default.buffer, this.v);
		}

		jsmain___vec2.default.mul(this.v * 0.5, 0.9500, this.v * 0.5);
		jsmain___vec2.default.set(this.l, this.p, this.l);
		jsmain___vec2.default.add(this.p, this.v, this.p);

		return true;
	};

	function Field(container) {
		this.loop = this.loop.bind(this);
		this.canvas = jsmain___util2.default.tag('canvas', null, container);
		this.info = jsmain___util2.default.tag('code', null, container);
		this.context = this.canvas.getContext('2d');
		this.mouse = new Mouse(this.canvas);
		this.simplex = new jsmain___simplexNoise2.default();
		this.particles = [];
		this.loop();
	}

	Field.prototype.spawn = function () {
		for (var i = Math.round(1e4 / 1.5) - this.particles.length; i--;) {
			this.particles.push(new Particle(this));
		}
	};

	Field.prototype.resize = function () {
		var w = this.canvas.clientWidth;
		var h = this.canvas.clientHeight;
		if (this.canvas.width !== w || this.canvas.height !== h) {
			this.width = this.canvas.width = w;
			this.height = this.canvas.height = h;
			this.clear();
		}
	};

	Field.prototype.clear = function () {
		this.context.fillStyle = jsmain___util2.default.color.rgba(1, 1, 1);
		this.context.fillRect(0, 0, this.width, this.height);
	};

	Field.prototype.render = function () {
		this.context.beginPath();

		for (var p, i = 0; p = this.particles[i++];) {
			if (p.update()) {
				this.context.moveTo(p.l[0], p.l[1]);
				this.context.lineTo(p.p[0], p.p[1]);
			} else p.reset();
		} // this.particles.splice(--i, 1);

		this.context.globalCompositeOperation = 'lighter';
		this.context.strokeStyle = jsmain___util2.default.color.rgba(0.61, 0.76, 0.10, 0.25);
		this.context.stroke();

		this.context.globalCompositeOperation = 'source-over';
		this.context.fillStyle = jsmain___util2.default.color.rgba(0, 0, 0, 0.05);
		this.context.fillRect(0, 0, this.width, this.height);
	};

	Field.prototype.update = function () {
		this.resize();
		this.spawn();
		this.render();
	};

	Field.prototype.loop = function () {
		this.now = Date.now();
		if (this.now - startup < 5000) {
			var fps = jsmain___util2.default.fps(true);
			if (fps < 20) {
				lowFpsCount++;
				if (lowFpsCount > 60) {
					html.classList.add('lowfps');
					setTimeout(function () {
						document.body.removeChild(jsmain___si('canvas'));
					}, 500);
					return;
				}
			} else {
				lowFpsCount = 0;
			}
		}
		requestAnimationFrame(this.loop);
		this.update();
	};

	window.addEventListener('load', function () {
		if (window_width > 600) {
			new Field(document.body);
		}
	}, false);

	html.classList.remove('no-js');
	if ('ontouchstart' in document) {
		html.classList.add('touch');
	} else {
		html.classList.add('no-touch');
	}
})();
/*≠≠ js/main.js ≠≠*/
})()