'use strict';

/** BUDDY BUILT **/

if ('undefined' === typeof self) var self = this;
if ('undefined' === typeof global) var global = self;
var $m = self.$m = self.$m || {};
if ('browser' != 'browser') {
  var $req = require;
  require = function buddyRequire (id) {
    if (!$m[id]) return $req(id);
    if ('function' == typeof $m[id]) $m[id]();
    return $m[id].exports;
  };
} else {
  if ('undefined' === typeof process) var process = {browser:true, env:{NODE_ENV:'development'}};
  self.require = self.require || function buddyRequire (id) {
    if ($m[id]) {
      if ('function' == typeof $m[id]) $m[id]();
      return $m[id].exports;
    }

    if ('development' == 'development') {
      console.warn('module ' + id + ' not found');
    }
  };
}
(function (global) {
  var babelHelpers = global.babelHelpers = {};

  babelHelpers.interopRequireDefault = function (obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  };
})(typeof global === "undefined" ? self : global);

(function () {
/*== js/vendor/util.js ==*/
$m['js/vendor/util'] = { exports: {} };
$m['js/vendor/util'].exports.__esModule = true;
var jsvendorutil__util = {
    each: function each(object, callback) {
        if (Object.prototype.toString.call(object) === '[object Array]') for (var i = 0, l = object.length; i < l; i++) {
            callback(object[i], i, object);
        } else for (var i in object) {
            if (Object.prototype.hasOwnProperty.call(object, i)) callback(object[i], i, object);
        }
    },
    extend: function extend() {
        for (var i = 1, a = arguments, o = a[0], s, p; s = a[i++];) {
            for (p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) o[p] = s[p];
            }
        }return o;
    },
    inherits: function inherits(child, parent) {
        child.prototype = new parent();
        child.prototype.constructor = child;
        child._super_ = parent.prototype;
        return child;
    },
    format: function format(string, object) {
        var o = typeof object === 'object' ? object : arguments;
        return string.replace(/{(.*?)}/g, function (m, n) {
            return typeof o[n] !== 'undefined' ? o[n] : m;
        });
    },
    rand: {
        float: function float(min, max) {
            return Math.random() * (max - min) + min;
        },
        int: function int(min, max) {
            return Math.random() * (max - min + 1) + min | 0;
        },
        item: function item(array) {
            return array[Math.random() * array.length | 0];
        },
        hash: function hash(length) {
            for (var r, s = '', l = length || 1; l--;) {
                s += (r = Math.random() * 62 | 0) < 10 ? r : String.fromCharCode(r + (r < 36 ? 87 : 29));
            }return s;
        }
    },
    math: {
        clamp: function clamp(value, min, max) {
            return value < min ? min : value > max ? max : value;
        },
        mod: function mod(value, min, max) {
            return (value -= min) % (max - min) + (value < 0 ? max : min);
        },
        map: function map(value, min1, max1, min2, max2) {
            return (value - min1) * (max2 - min2) / (max1 - min1) + min2;
        },
        lerp: function lerp(value, min, max) {
            return min + value * (max - min);
        },
        angle: function angle(a, b, full) {
            return 2 * (a = (a < b ? b - a : a - b) % full) > full ? full - a : a;
        }
    },
    str: {
        pad: function pad(string, length, _pad) {
            var s = String(string);
            var l = Math.max(0, Math.abs(length) - s.length);
            var p = new Array(++l).join(_pad != null ? _pad : ' ');
            return length < 0 ? s + p : p + s;
        }
    },
    array: {
        cross: function cross(array, callback) {
            var i,
                j,
                l = array.length;
            for (i = 0; i < l; i++) {
                for (j = i + 1; j < l;) {
                    callback(array[i], array[j], i, j++);
                }
            }return array;
        }
    },
    fn: {
        wrap: function wrap(fn, wrapper) {
            return function () {
                return wrapper.call(this, arguments, fn);
            };
        },
        log: function log(fn, logger) {
            return function () {
                logger.call(this, arguments, fn);
                return fn.apply(this, arguments);
            };
        }
    },
    color: {
        rgba: function rgba(_rgba) {
            if (typeof _rgba !== 'object') _rgba = arguments;
            return 'rgba(' + (_rgba[0] * 255 + 0.5 | 0) + ',' + (_rgba[1] * 255 + 0.5 | 0) + ',' + (_rgba[2] * 255 + 0.5 | 0) + ',' + (_rgba[3] != null ? _rgba[3] : 1).toFixed(3) + ')';
        },
        hsla: function hsla(_hsla) {
            if (typeof _hsla !== 'object') _hsla = arguments;
            return 'hsla(' + (_hsla[0] * 360 + 0.5 | 0) + ',' + (_hsla[1] * 100 + 0.5 | 0) + '%,' + (_hsla[2] * 100 + 0.5 | 0) + '%,' + (_hsla[3] != null ? _hsla[3] : 1).toFixed(3) + ')';
        }
    },
    gradient: function gradient(colors, position) {
        var a,
            b,
            c,
            i,
            l,
            t = position;
        for (i = 0; c = colors[i++];) {
            if (t - c[0] >= 0 && (!a || t - c[0] < t - a[0])) a = c;
            if (t - c[0] <= 0 && (!b || t - c[0] > t - b[0])) b = c;
        }
        t = (t - a[0]) / (b[0] - a[0]) || 0;
        for (c = [], i = 0, l = a[1].length; i < l;) {
            c[i] = a[1][i] + (b[1][i] - a[1][i++]) * t;
        }return c;
    },
    loop: function loop(callback, interval) {
        var n = Date.now(),
            s = n,
            l = n,
            i = 0;
        var loop = function loop() {
            !callback(i++, (n = Date.now()) - s, n - l, l = n) && next();
        };
        var next = interval == null ? requestAnimationFrame.bind(null, loop) : setTimeout.bind(null, loop, interval);
        return loop();
    },
    perf: function perf(times) {
        for (var t, f, j, i = 1, r = []; f = arguments[i++];) {
            t = Date.now();for (j = 0; j < times; f(j++)) {}
            r.push((Date.now() - t) / 1000);
        }
        return r;
    },
    fps: function (h, l, s) {
        return function (int) {
            l = h.push(Date.now()) - 1;
            s = l / (h[l] - h[0]) * 1000 || 0;
            l > s && h.splice(0, ++l - s | 0);
            return int ? s + 0.5 | 0 : s;
        };
    }([]),
    bind: function (fn) {
        return { on: fn.bind('add'), off: fn.bind('remove') };
    }(function (elements, events, listeners, capture) {
        var a = [].concat(elements),
            b = [].concat(events),
            c = [].concat(listeners);
        for (var k, j, i = 0; a[i]; i++) {
            for (j = 0; b[j]; j++) {
                for (k = 0; c[k]; k++) {
                    a[i][this + 'EventListener'](b[j], c[k], capture);
                }
            }
        }
    }),
    ajax: function (fn) {
        return { get: fn.bind(0), post: fn.bind(1) };
    }(function (url, data, callback, timeout) {
        var p,
            q = '',
            xhr = new XMLHttpRequest();
        for (p in data) {
            if (data.hasOwnProperty(p)) q += '&' + [p, data[p]].map(encodeURIComponent).join('=');
        }if (q && !this) url += ~url.indexOf('?') ? q : q.replace('&', '?');
        xhr.open(this ? 'POST' : 'GET', url, true);
        xhr.timeout = timeout ? timeout * 1000 : 0;
        xhr.onreadystatechange = function () {
            this.readyState === 4 && callback(this.response, this);
        };
        if (!url.match(/^(https?:)?\/\//i)) {
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        }
        xhr.send(this && q ? q.substr(1) : null);
        return xhr;
    }),
    load: {
        docs: function docs(list, callback, progress) {
            var item,
                i,
                j = 0,
                e = function e() {
                if (this.readyState !== 4) return;
                list[list.indexOf(this)] = this.response;
                j++;progress && progress(j, list.length);
                j === list.length && callback(list);
            };
            progress && progress(0, list.length);
            for (i = 0; i < list.length; i++) {
                item = new XMLHttpRequest();
                item.onreadystatechange = e;
                item.open('GET', list[i], true);
                item.send(null);
                list[i] = item;
            }
            return list;
        },
        imgs: function imgs(list, callback, progress) {
            var item,
                i,
                j = 0,
                e = function e() {
                j++;progress && progress(j, list.length);
                j === list.length && callback(list);
            };
            progress && progress(0, list.length);
            for (i = 0; i < list.length; i++) {
                item = new Image();
                item.onload = e;
                item.src = list[i];
                list[i] = item;
            }
            return list;
        }
    },
    select: function select(selector, where) {
        if (selector = /(^[.#]?)([\w-]+$)/.exec(selector)) switch (selector[1]) {
            case '#':
                return (where || document).getElementById(selector[2]);
            case '.':
                return (where || document).getElementsByClassName(selector[2]);
            default:
                return (where || document).getElementsByTagName(selector[2]);
        } else return (where || document).querySelectorAll(selector);
    },
    tag: function tag(element, options, target, prepend) {
        var e = element,
            o = options,
            i = e || '',
            j;
        if (e == null || e.nodeType == null) {
            e = document.createElement(String(i.match(/^[^#.]+/) || 'div'));
            if (j = i.match(/#([^#.]+)/)) e.id = j[1];
            if (j = i.match(/\.[^#.]+/g)) e.className = j.join(' ').replace(/\./g, '');
        }
        if (o != null) if (o.nodeType != null) e.appendChild(o);else if (typeof o !== 'object') e.textContent = o;else if (o[i = 0]) while (o[i]) {
            e.appendChild(o[i++]);
        } else for (i in o) {
            if (o.hasOwnProperty(i)) e[i] = o[i];
        }if (target) if (!prepend) target.appendChild(e);else target.insertBefore(e, target.firstChild);
        return e;
    },
    breadcrump: function breadcrump(element, url, sub, last, separator) {
        url = decodeURI(url || location.href);
        url = url.match(/[^?#]+/)[0].split('/');
        sub = /^[\d.]+$/.test(url[2]) ? 0 : sub;
        var e,
            i,
            host = url[2].split('.');
        while (host.length) {
            e = document.createElement('a');
            e.href = url[0] + '//' + host.join('.') + '/';
            e.textContent = sub && host.length > sub && host[0] !== 'www' ? host.splice(0, 1) + '.' : host.splice(0).join('.');
            element.appendChild(e);
        }
        for (i = 3; url[i]; i++) {
            element.appendChild(document.createTextNode(separator || ' › '));
            e = document.createElement(!url[i + 1] && !last ? 'span' : 'a');
            if ('href' in e) e.href = encodeURI(url.slice(0, i + 1).join('/'));
            if ('href' in e && url[i + 1] != null) e.href += '/';
            e.textContent = url[i];
            element.appendChild(e);
        }
        return element;
    },
    form: function form(_form) {
        var i,
            e,
            o = {},
            c = _form.querySelectorAll('*');
        for (i = 0; e = c[i]; i++) {
            if (e.name) switch (e.type) {
                case 'radio':
                    if (e.checked) o[e.name] = e.value;break;
                case 'checkbox':
                    o[e.name] = e.checked ? 1 : 0;break;
                default:
                    o[e.name] = e.value;break;
            }
        }return o;
    },
    favicon: function favicon(url) {
        var e = document.head.querySelector('link[rel*=icon]');
        e && document.head.removeChild(e);
        e = document.createElement('link');
        e.rel = 'shortcut icon';e.href = url;
        document.head.appendChild(e);
    }
};

$m['js/vendor/util'].exports.default = jsvendorutil__util;
/*≠≠ js/vendor/util.js ≠≠*/


/*== js/vendor/vec4.js ==*/
$m['js/vendor/vec4'] = { exports: {} };
$m['js/vendor/vec4'].exports.__esModule = true;
var jsvendorvec4__vec4 = {};

jsvendorvec4__vec4.array = Float32Array || Array;
jsvendorvec4__vec4.buffer = new jsvendorvec4__vec4.array(4);

jsvendorvec4__vec4.get = function (a, b, c, d) {
    return jsvendorvec4__vec4.set(new jsvendorvec4__vec4.array(4), a, b, c, d);
};

jsvendorvec4__vec4.set = function (out, a, b, c, d) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof a === 'object') {
        out[0] = -Infinity < a[0] && a[0] < Infinity ? a[0] : 0;
        out[1] = -Infinity < a[1] && a[1] < Infinity ? a[1] : 0;
        out[2] = -Infinity < a[2] && a[2] < Infinity ? a[2] : 0;
        out[3] = -Infinity < a[3] && a[3] < Infinity ? a[3] : 1;
    } else {
        out[0] = -Infinity < a && a < Infinity ? a : 0;
        out[1] = -Infinity < b && b < Infinity ? b : 0;
        out[2] = -Infinity < c && c < Infinity ? c : 0;
        out[3] = -Infinity < d && d < Infinity ? d : 1;
    }
    return out;
};

jsvendorvec4__vec4.equals = function (a, b) {
    if (a === b) return true;
    return typeof b === 'object' ? a[0] === b[0] && a[1] === b[1] && a[2] === b[2] : a[0] === b && a[1] === b && a[2] === b;
};

jsvendorvec4__vec4.add = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] + b[0];
        out[1] = a[1] + b[1];
        out[2] = a[2] + b[2];
    } else {
        out[0] = a[0] + b;
        out[1] = a[1] + b;
        out[2] = a[2] + b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.sub = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] - b[0];
        out[1] = a[1] - b[1];
        out[2] = a[2] - b[2];
    } else {
        out[0] = a[0] - b;
        out[1] = a[1] - b;
        out[2] = a[2] - b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.mul = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] * b[0];
        out[1] = a[1] * b[1];
        out[2] = a[2] * b[2];
    } else {
        out[0] = a[0] * b;
        out[1] = a[1] * b;
        out[2] = a[2] * b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.div = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] / b[0];
        out[1] = a[1] / b[1];
        out[2] = a[2] / b[2];
    } else {
        out[0] = a[0] / b;
        out[1] = a[1] / b;
        out[2] = a[2] / b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.mod = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof b === 'object') {
        out[0] = a[0] % b[0];
        out[1] = a[1] % b[1];
        out[2] = a[2] % b[2];
    } else {
        out[0] = a[0] % b;
        out[1] = a[1] % b;
        out[2] = a[2] % b;
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.min = function (a, min, out) {
    if (typeof min === 'undefined') return Math.min(a[0], a[1], a[2]);
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof min === 'object') {
        out[0] = a[0] < min[0] ? min[0] : a[0];
        out[1] = a[1] < min[1] ? min[1] : a[1];
        out[2] = a[2] < min[2] ? min[2] : a[2];
    } else {
        out[0] = a[0] < min ? min : a[0];
        out[1] = a[1] < min ? min : a[1];
        out[2] = a[2] < min ? min : a[2];
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.max = function (a, max, out) {
    if (typeof max === 'undefined') return Math.max(a[0], a[1], a[2]);
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof max === 'object') {
        out[0] = a[0] > max[0] ? max[0] : a[0];
        out[1] = a[1] > max[1] ? max[1] : a[1];
        out[2] = a[2] > max[2] ? max[2] : a[2];
    } else {
        out[0] = a[0] > max ? max : a[0];
        out[1] = a[1] > max ? max : a[1];
        out[2] = a[2] > max ? max : a[2];
    }
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.clamp = function (a, min, max, out) {
    return jsvendorvec4__vec4.max(jsvendorvec4__vec4.min(a, min, jsvendorvec4__vec4.buffer), max, out);
};

jsvendorvec4__vec4.sum = function (a) {
    return a[0] + a[1] + a[2];
};

jsvendorvec4__vec4.dot = function (a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};

jsvendorvec4__vec4.cross = function (a, b, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    out[0] = a[1] * b[2] - a[2] * b[1];
    out[1] = a[2] * b[0] - a[0] * b[2];
    out[2] = a[0] * b[1] - a[1] * b[0];
    return out[3] = 1, out;
};

jsvendorvec4__vec4.unit = function (a, out) {
    var l = Math.sqrt(jsvendorvec4__vec4.dot(a, a));
    return jsvendorvec4__vec4.mul(a, l ? 1 / l : 0, out);
};

jsvendorvec4__vec4.length = function (a, length, out) {
    var l = Math.sqrt(jsvendorvec4__vec4.dot(a, a));
    if (typeof length === 'undefined') return l;
    return jsvendorvec4__vec4.mul(a, l ? length / l : 0, out);
};

jsvendorvec4__vec4.length2 = function (a, length, out) {
    var l = jsvendorvec4__vec4.dot(a, a);
    if (typeof length === 'undefined') return l;
    return jsvendorvec4__vec4.mul(a, l ? length / l : 0, out);
};

jsvendorvec4__vec4.distance = function (a, b) {
    return jsvendorvec4__vec4.length(jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer));
};

jsvendorvec4__vec4.distance2 = function (a, b) {
    return jsvendorvec4__vec4.dot(jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer), jsvendorvec4__vec4.buffer);
};

jsvendorvec4__vec4.lerp = function (a, b, t, out) {
    jsvendorvec4__vec4.sub(b, a, jsvendorvec4__vec4.buffer);
    jsvendorvec4__vec4.mul(jsvendorvec4__vec4.buffer, t, jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.add(a, jsvendorvec4__vec4.buffer, out);
};

jsvendorvec4__vec4.project = function (a, b, out) {
    return jsvendorvec4__vec4.mul(b, jsvendorvec4__vec4.dot(a, b) / jsvendorvec4__vec4.dot(b, b), out);
};

jsvendorvec4__vec4.mirror = function (a, normal, out) {
    jsvendorvec4__vec4.mul(normal, 2 * jsvendorvec4__vec4.dot(a, normal), jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.sub(jsvendorvec4__vec4.buffer, a, out);
};

jsvendorvec4__vec4.reflect = function (a, normal, out) {
    jsvendorvec4__vec4.mul(normal, 2 * jsvendorvec4__vec4.dot(a, normal), jsvendorvec4__vec4.buffer);
    return jsvendorvec4__vec4.sub(a, jsvendorvec4__vec4.buffer, out);
};

jsvendorvec4__vec4.random = function (radius, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    if (typeof radius === 'undefined') radius = 1;
    var t = Math.acos(Math.random() * 2 - 1);
    var p = Math.random() * Math.PI * 2;
    out[0] = radius * Math.sin(t) * Math.cos(p);
    out[1] = radius * Math.sin(t) * Math.sin(p);
    out[2] = radius * Math.cos(t);
    return out[3] = 1, out;
};

jsvendorvec4__vec4.each = function (a, callback, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    out[0] = callback(a[0], 0);
    out[1] = callback(a[1], 1);
    out[2] = callback(a[2], 2);
    return out[3] = a[3], out;
};

jsvendorvec4__vec4.transform = function (v, m, out) {
    if (!out) out = new jsvendorvec4__vec4.array(4);
    var a = v[0],
        b = v[1],
        c = v[2],
        d = v[3];
    out[0] = a * m[0] + b * m[1] + c * m[2] + d * m[3];
    out[1] = a * m[4] + b * m[5] + c * m[6] + d * m[7];
    out[2] = a * m[8] + b * m[9] + c * m[10] + d * m[11];
    out[3] = a * m[12] + b * m[13] + c * m[14] + d * m[15];
    return out;
};

$m['js/vendor/vec4'].exports.default = jsvendorvec4__vec4;
/*≠≠ js/vendor/vec4.js ≠≠*/


/*== js/main.js ==*/
$m['js/main'] = { exports: {} };
var jsmain___simplexNoise = require('simplex-noise');

var jsmain___simplexNoise2 = babelHelpers.interopRequireDefault(jsmain___simplexNoise);

var jsmain___vec = $m['js/vendor/vec4'].exports;

var jsmain___vec2 = babelHelpers.interopRequireDefault(jsmain___vec);

var jsmain___util = $m['js/vendor/util'].exports;

var jsmain___util2 = babelHelpers.interopRequireDefault(jsmain___util);

var jsmain___lazysizes = require('lazysizes');

var jsmain___lazysizes2 = babelHelpers.interopRequireDefault(jsmain___lazysizes);


var jsmain__scrollHelper = {
	easeInOut: function easeInOut(currentTime, start, change, duration) {
		currentTime /= duration / 2;
		if (currentTime < 1) {
			return change / 2 * currentTime * currentTime + start;
		}
		currentTime -= 1;
		return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;
	},

	scrollTo: function scrollTo(to, duration) {
		var start = window.pageYOffset,
		    change = to - start,
		    increment = 20;

		if (duration === 0) {
			window.scrollTo(0, to);
			return;
		}

		var animateScroll = function animateScroll(elapsedTime) {
			elapsedTime += increment;
			var position = jsmain__scrollHelper.easeInOut(elapsedTime, start, change, duration);
			window.scrollTo(0, position);
			if (elapsedTime < duration) {
				requestAnimationFrame(function () {
					animateScroll(elapsedTime);
				});
			}
		};

		animateScroll(0);
	}
};

String.prototype.allReplace = function (obj) {
	var retStr = this;
	for (var x in obj) {
		retStr = retStr.replace(new RegExp(x, 'g'), obj[x]);
	}
	return retStr;
};

var jsmain___s = function jsmain___s(selector, context) {
	var d = context || document;
	return Array.apply(null, d.querySelectorAll(selector));
};

var jsmain___si = function jsmain___si(selector, context, returnNull) {
	var d = context || document;
	var tmp = d.querySelector(selector);
	return tmp ? tmp : returnNull ? null : document.createElement('div');
};

var jsmain___ael = function jsmain___ael(selector, ev, callback) {
	var elm = typeof selector === 'string' ? jsmain___si(selector) : selector;
	elm.addEventListener(ev, callback);
};

var jsmain___ajax = function jsmain___ajax(url, callback) {
	var request = new XMLHttpRequest();
	request.open('GET', url, true);

	request.onload = function () {
		if (request.status >= 200 && request.status < 400) {
			if (typeof callback === 'function') {
				callback(request);
			}
		} else {
			console.error('request error', request);
		}
	};

	request.onerror = function (err) {
		console.error('error', err);
	};

	request.send();
};

var jsmain__loadJSONP = function () {
	var unique = 0;
	return function (url, callback, context) {
		// INIT
		var name = "_jsonp_" + unique++;
		if (url.match(/\?/)) url += "&callback=" + name;else url += "?callback=" + name;

		// Create script
		var script = document.createElement('script');
		script.type = 'text/javascript';
		script.src = url;

		// Setup handler
		window[name] = function (data) {
			callback.call(context || window, data);
			document.getElementsByTagName('head')[0].removeChild(script);
			script = null;
			delete window[name];
		};

		// Load JSON
		document.getElementsByTagName('head')[0].appendChild(script);
	};
}();

(function () {
	var oldScrollTop = 0,
	    scrollTop = window.pageYOffset,
	    lowFpsCount = 0,
	    stupidWordContainers = [],
	    currentStupidWords = [],
	    stupidWordTimeouts = [],
	    modalIsOpen = false;
	var html = jsmain___si('html'),
	    sections = jsmain___s('[data-link-url]'),
	    sectionTops = [],
	    phoneMenu = window.innerWidth < 635,
	    menuHeight = phoneMenu ? 0 : 70,
	    sizes = {
		showMenu: 635
	},
	    window_width = window.innerWidth,
	    window_height = window.innerHeight,
	    logo = jsmain___si('.logo'),
	    logoTop = window.isMainPage ? logo.getBoundingClientRect().top + scrollTop : 0,
	    startup = Date.now(),
	    speakerCard = jsmain___si('.speakerCard'),
	    stupidWords = ['cat', 'bench', 'hat', 'cod', 'cabin', 'werewolf', "thing", "grail", "business", "point", "thread", "token", "trifle", "trivia", "triviality", "terra firma", "part", "wall", "peculiarity", "vehicle", "portion", "vagabond", "prop", "property", "rarity", "relic", "ribbon", "shiner", "small beer", "snake", "soil", "souvenir", "unit", "charm", "commemorative", "curiosity", "filler", "film", "finding", "floater", "fomite", "formation", "geological formation", "good luck charm", "ground", "growth", "hail", "head", "hoodoo", "keepsake", "land", "location", "lot", "whole", "makeweight", "web", "moon", "neighbor", "neighbour", "catch", "paring", "chicane", "carp", "challenge", "remonstrate", "cavil", "demur", "mind", "prepositional object", "direct object", "retained object", "passion", "love", "centre of attention", "hallucination", "center", "hobgoblin", "centre", "bugbear"];

	function render() {
		if (!window.isMainPage) {
			return;
		}
		if (scrollTop !== oldScrollTop) {
			if (sectionTops.length === 0) {
				sections.forEach(function (s) {
					sectionTops.push(s.getBoundingClientRect().top + scrollTop - menuHeight);
				});
			}
			if (scrollTop > logoTop + 20) {
				html.classList.add('toggle--logo-in-menu');
			} else {
				html.classList.remove('toggle--logo-in-menu');
			}

			var lis = jsmain___s('nav li');
			for (var i = sectionTops.length; i--;) {
				if (scrollTop > sectionTops[i]) {
					var li = lis[i];
					if (li && !li.classList.contains('active')) {
						jsmain___si('nav li.active').classList.remove('active');
						li.classList.add('active');
						var url = jsmain___si('a', li).href;
						url = url.substr(url.indexOf('#'));
						location.hash = url;
					}
					break;
				}
			}
			oldScrollTop = scrollTop;
		}

		requestAnimationFrame(render);
	}

	if (window_width >= sizes.showMenu) {
		render();
	}

	if (location.hash.length > 2 && location.hash.indexOf('favs=') !== -1) {
		var favs = location.hash.substr(location.hash.indexOf('favs=') + 5);
		favs.split('+').forEach(function (id) {
			localStorage.setItem('fav-' + id, true);
		});
	}

	jsmain___ael(document, 'scroll', function (e) {
		scrollTop = window.pageYOffset;
	});

	jsmain___ael('.menu_toggle', 'click', function () {
		html.classList.toggle('show--menu');
	});

	jsmain___ael('nav', 'click', function (e) {
		var li = e.target.closest('li');
		if (li) {
			var url = jsmain___si('a', li).href;
			url = url.substr(url.indexOf('#') + 1);
			var section = jsmain___si('[data-link-url="' + url + '"]');
			jsmain__scrollHelper.scrollTo(section.getBoundingClientRect().top + scrollTop + 1, 300);
			html.classList.remove('show--menu');
		}
	});

	jsmain___ael('.logo', 'click', function (e) {
		jsmain__scrollHelper.scrollTo(0, 300);
	});

	if (location.hash.length > 2) {
		jsmain___si('nav a[href*="' + location.hash + '"]').click();
	}

	jsmain___ael('.block--conduct .toggle-extra', 'click', function (e) {
		e.preventDefault();
		this.closest('.block').classList.toggle('open');
	});

	function getRandom(arr, n) {
		var result = new Array(n),
		    len = arr.length,
		    taken = new Array(len);

		if (n > len) {
			throw new RangeError("getRandom: more elements taken than available");
		}

		while (n--) {
			var x = Math.floor(Math.random() * len);
			result[n] = arr[x in taken ? taken[x] : x];
			taken[x] = --len;
		}
		return result;
	}

	jsmain___ajax('https://api.trondheimdc.no/events/tdc2017/sessions', function (data) {
		var sessions = JSON.parse(data.responseText);
		if (window.location.href.indexOf('workshops') !== -1) {
			loadWorkshops(sessions);
		} else if (location.href.indexOf('program') !== -1) {
			loadProgram(sessions);
		} else {
			var speakers = sessions.reduce(function (acc, curr) {
				var names = acc.map(function (f) {
					return f.navn;
				});
				var tmp = curr.foredragsholdere.filter(function (f) {
					return names.indexOf(f.navn) === -1;
				});
				tmp.forEach(function (s) {
					s.tittel = curr.tittel;
				});
				return acc.concat(curr.foredragsholdere.filter(function (f) {
					return names.indexOf(f.navn) === -1;
				}));
			}, []);
			loadSpeakers(getRandom(speakers, 10));
		}
	});

	function addSizeParam(imageUrl) {
		var param = imageUrl.indexOf('gravatar') !== -1 ? '?s=240&d=retro' : '?size=240';
		return ('' + imageUrl + param).replace('http:', 'https:');
	}

	function loadSpeakers(speakers) {
		var fallbackImg = '//placehold.it/360x240/117fe8/fff';
		jsmain___si('.block--speakers ul').innerHTML = speakers.reduce(function (acc, speaker) {
			var img = speaker.bildeUri || fallbackImg;
			var name = speaker.navn;

			return acc + '\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<img src="' + addSizeParam(img) + '">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>' + speaker.navn + '</h5>\n\t\t\t\t\t\t\t<h6>' + speaker.tittel + '</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>';
		}, '');
	}

	function cleanTitle(title) {
		return title.replace('#', '').replace(' ', '').substr(0, 10);
	}

	function loadWorkshops(sessions) {
		var workshops = sessions.filter(function (p) {
			return p.format === 'workshop';
		});
		jsmain___si('#workshopsdetails').outerHTML = workshops.reduce(function (acc, workshop) {
			var green = acc.length === 0 ? '' : 'green';

			return acc + '\n\t\t\t\t\t<a name="' + cleanTitle(workshop.tittel) + '"/>\n\t\t\t\t\t<section class="block block--workshopsinfo ' + green + '" data-workshopid="' + workshop.tittel + '">\n\t\t\t\t\t\t<div class="text-content">\n\t\t\t\t\t\t\t<h4>' + workshop.tittel + '</h4>\n\t\t\t\t\t\t\t<div id="' + cleanTitle(workshop.tittel) + 'beskrivelse"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>';
		}, '');

		workshops.forEach(function (workshop) {
			var detaljer = workshop.links.find(function (l) {
				return l.rel === 'detaljer';
			}).href;
			jsmain___ajax(detaljer, function (data) {
				var workshopDetaljer = JSON.parse(data.responseText);
				var tittel = workshopDetaljer.tittel,
				    beskrivelse = workshopDetaljer.beskrivelse;

				var foredragholder = workshopDetaljer.foredragsholdere[0];
				jsmain___si('#' + cleanTitle(tittel) + 'beskrivelse').innerHTML = '<p>' + beskrivelse.replace(/\n+/g, '<br/>') + '</p>\n\t\t\t\t<div class="foredragsholder">\n\t\t\t\t\t<h4>' + foredragholder.navn + '</h4>\n\t\t\t\t\t<p>' + foredragholder.bio + '</p>\n\t\t\t\t</div> ';
			});
		});
	}

	function writeStupidWord(pos, which) {
		if (stupidWordContainers.length === 0) {
			return;
		}

		if (pos === 0) {
			var newWord = '';
			do {
				newWord = stupidWords[Math.floor(Math.random() * stupidWords.length)];
			} while (newWord === currentStupidWords[which]);
			currentStupidWords[which] = newWord;
		}

		if (pos > currentStupidWords[which].length) {
			stupidWordContainers[which].innerHTML = currentStupidWords[which] + '?';
			pos = -1;
		} else {
			stupidWordContainers[which].innerHTML = currentStupidWords[which].substr(0, pos);
		}

		var howLong = pos < currentStupidWords[which].length ? Math.random() * 200 + 200 : 3000;

		stupidWordTimeouts[which] = setTimeout(function () {
			writeStupidWord(pos + 1, which);
		}, howLong);
	}

	function loadProgram(sessions) {
		var slots = [],
		    slotTimes = [];
		sessions.forEach(function (sesh) {
			if (sesh.format === 'workshop') {
				return;
			}
			var start = new Date(sesh.starter);
			var h = start.getHours();
			h = (h < 10 ? '0' : '') + h;
			var m = start.getMinutes();
			m = (m < 10 ? '0' : '') + m;
			var format = h + ':' + m;
			if (!slots[format]) {
				slots[format] = [];
				slotTimes.push(format);
			}
			slots[format].push(sesh);
		});
		//breaks
		slotTimes.push('10:45');
		slotTimes.push('12:15');
		slotTimes.push('15:30');
		slotTimes.push('18:15');

		slotTimes.sort();
		var content = '<section class="roomsColumns">';
		for (var i = 1; i < 6; i++) {
			content += '<div>Sal <span>' + i + '</span></div>';
		}
		content += '</section>';
		slotTimes.forEach(function (time) {
			if (!slots[time]) {
				var isLunch = time === '12:15';
				var isParty = time === '18:15';
				var type = isLunch ? 'lunch' : isParty ? 'party' : 'refreshments';
				var extra = isLunch ? ' title="<b>BartJS Podcast Live</b>"' : isParty ? ' style="content: \'<b>free</b>\';"' : '';
				content += '<section class="break ' + type + '">&lt;br class="<b>' + type + '</b>" data-time="<b>' + time + '</b>"' + extra + '&gt;</section>';
				return;
			}
			if (slots[time].length < 5) {
				var roomCheck = [false, false, false, false, false];
				slots[time].forEach(function (sesh) {
					var rom = sesh.rom.replace('Sal ', '');
					roomCheck[rom - 1] = true;
				});

				for (var _i = 0; _i < 5; _i++) {
					if (!roomCheck[_i]) {
						slots[time].push({
							rom: 'Sal ' + (_i + 1),
							format: 'fake'
						});
					}
				}
			}

			slots[time].sort(function (a, b) {
				return a.rom.replace('Sal ', '') - b.rom.replace('Sal ', '');
			});

			content += '<section class="slot ' + time + '" data-time="' + time + '">';
			slots[time].forEach(function (sesh) {
				var rom = sesh.rom.replace('Sal ', '');
				if (sesh.format === 'fake') {
					content += '<div class="sesh fake"></div>';
				} else {
					var names = sesh.foredragsholdere.reduce(function (acc, person) {
						return acc + (acc ? ' & ' : '') + ('<span>' + person.navn + '</span>');
					}, '');

					var id = time + '-' + rom,
					    fav = localStorage.getItem("fav-" + id) === 'true',
					    url = sesh.links.length ? sesh.links[0].href : '';
					content += '<div class="sesh' + (fav ? ' is-fav' : '') + '" data-id=' + id + '>\n\t\t\t\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t\t\t\t<time>' + time + '</time>\n\t\t\t\t\t\t\t\t\t\t<span class="room"><span>Sal</span> ' + rom + '</span>\n\t\t\t\t\t\t\t\t\t</aside>\n\t\t\t\t\t\t\t\t\t<section data-href="' + url + '">\n\t\t\t\t\t\t\t\t\t\t<h4>' + sesh.tittel + '</h4>\n\t\t\t\t\t\t\t\t\t\t<h5>' + names + '</h5>\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t<div class="fav-toggle">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\tfav\n\t\t\t\t\t\t\t\t\t\t\t<span class="yes">y</span>/<span class="no">n</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>';
				}
			});
			content += '</section>';
		});

		jsmain___si('.block--program').innerHTML = content;

		document.addEventListener('click', function (e) {
			var that = e.target.closest('.sesh section');
			if (that) {
				speakerCard.style.display = 'none';
				speakerCard.classList.remove('show');
				var url = that.getAttribute('data-href');
				if (!url) {
					return;
				}
				var box = that.getBoundingClientRect();
				var isFav = that.parentNode.classList.contains('is-fav');
				var id = that.parentNode.getAttribute('data-id');
				jsmain___ajax(url, function (data) {
					var sesh = JSON.parse(data.responseText);
					var names = sesh.foredragsholdere.reduce(function (acc, person) {
						return acc + (acc ? ' & ' : '') + ('<span>' + person.navn + '</span>');
					}, '');
					var rom = sesh.rom.replace('Sal ', 'Sal <span>') + '</span>';
					var realTime = new Date(sesh.starter);
					var date = sesh.starter.substr(0, sesh.starter.indexOf('T') + 1);
					var tid = sesh.starter;
					tid = tid.substr(tid.indexOf('T') + 3, 6);
					tid = (realTime.getHours() < 10 ? '0' : '') + realTime.getHours() + tid;
					tid = date + ('<span>' + tid + '</span>');

					var speakerContent = '';
					var speakerAbout = '';
					sesh.foredragsholdere.forEach(function (speaker) {
						var hover = speaker.navn.allReplace({ 'æ': 'a', 'å': 'a', 'ø': 'o', ' ': '-', '[\.]': '' }).toLowerCase();
						var addName = sesh.foredragsholdere.length > 1 ? '<strong class="name">' + speaker.navn + '</strong>' : '';
						speakerContent += '<figure>\n\t\t\t\t\t\t\t<img src="' + addSizeParam(speaker.bildeUri) + '">\n\t\t\t\t\t\t\t<div class="deepdream"><img src="/img/deep/' + hover + '.jpg"></div>\n\t\t\t\t\t\t\t<figcaption>' + addName + '<strong>Image description</strong>This looks like a ... <span></span></figcaption>\n\t\t\t\t\t\t</figure>';

						speakerAbout += '<strong>About ' + speaker.navn + '</strong>\n\t\t\t\t\t\t<p>' + speaker.bio + '</p>';
					});

					var content = '<span class="close">close</span>\n\t\t\t\t\t\t<article class="speakers-' + sesh.foredragsholdere.length + '">\n\t\t\t\t\t\t\t<div class="fake">\n\t\t\t\t\t\t\t\t' + that.innerHTML + '\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t<h2>' + sesh.tittel + '</h2>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<hgroup>\n\t\t\t\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t\t\t\t<dt>Name:</dt>\n\t\t\t\t\t\t\t\t\t\t\t<dd class="name">' + names + '</dd>\n\t\t\t\t\t\t\t\t\t\t\t<dt>Time:</dt>\n\t\t\t\t\t\t\t\t\t\t\t<dd>' + tid + '</dd>\n\t\t\t\t\t\t\t\t\t\t\t<dt>Room:</dt>\n\t\t\t\t\t\t\t\t\t\t\t<dd>' + rom + '</dd>\n\t\t\t\t\t\t\t\t\t\t\t<dt>Favourite</dt>\n\t\t\t\t\t\t\t\t\t\t\t<dd><a class="fav-toggle"><span class="yes">y</span>/<span class="no">n</span></a></dd>\n\t\t\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t\t</hgroup>\n\t\t\t\t\t\t\t\t\t' + speakerContent + '\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t<strong>Talk:</strong>\n\t\t\t\t\t\t\t\t<p>' + sesh.beskrivelse + '</p>\n\t\t\t\t\t\t\t\t<strong>Audience</strong>\n\t\t\t\t\t\t\t\t<p>' + sesh.tiltenktPublikum + '</p>\n\t\t\t\t\t\t\t\t' + speakerAbout + '\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</article>';

					if (isFav) {
						speakerCard.classList.add('is-fav');
					} else {
						speakerCard.classList.remove('is-fav');
					}
					speakerCard.style.width = box.width + 'px';
					speakerCard.style.left = box.left + 'px';
					speakerCard.style.top = box.top + scrollTop + 'px';
					speakerCard.style.height = box.height + 'px';
					speakerCard.innerHTML = content;
					speakerCard.style.display = 'block';
					speakerCard.setAttribute('data-id', that.parentNode.getAttribute('data-id'));
					html.classList.add('show--speakerCard');
					location.hash = id;
					modalIsOpen = true;
					setTimeout(function () {
						speakerCard.classList.add('show');
						var width = Math.min(window_width * 0.8, 700);
						speakerCard.style.top = window_height * 0.1 + scrollTop + 'px';
						speakerCard.style.height = window_height * 0.8 + 'px';
						speakerCard.style.left = (window_width - width) / 2 + 'px';
						speakerCard.style.width = width + 'px';
					}, 50);
					stupidWordTimeouts[0] = setTimeout(function () {
						stupidWordContainers.push(jsmain___si('.speakerCard figcaption span'));
						writeStupidWord(0, 0);
						if (sesh.foredragsholdere.length > 1) {
							stupidWordTimeouts[1] = setTimeout(function () {
								stupidWordContainers.push(jsmain___si('.speakerCard figure:nth-child(3) figcaption span'));
								writeStupidWord(0, 1);
							}, 1);
						}
					}, 6000);
				});
			}
		});

		if (location.hash.length > 2) {
			var id = location.hash.replace('#', '');
			var sesh = jsmain___si('.sesh[data-id="' + id + '"] section', document, true);
			if (sesh) {
				sesh.click();
			}
		}

		document.addEventListener('click', function (e) {
			var that = e.target.closest('.speakerCard .close');
			if (that) {
				speakerCard.style.opacity = 0;
				stupidWordContainers = [];
				clearTimeout(stupidWordTimeouts[0]);
				clearTimeout(stupidWordTimeouts[1]);
				modalIsOpen = false;
				//TODO: Check if this works

				setTimeout(function () {
					speakerCard.removeAttribute('style');
					html.classList.remove('show--speakerCard');
					speakerCard.classList.remove('show');
					location.hash = "#!";
				}, 400);
			}
		});

		document.addEventListener('click', function (e) {
			if (modalIsOpen && !e.target.closest('.speakerCard')) {
				jsmain___si('.close', speakerCard).click();
			}
		});

		document.addEventListener('click', function (e) {
			var that = e.target.closest('.fav-toggle');
			if (that) {
				var _sesh = that.closest('.sesh'),
				    _id = '',
				    inModal = false;
				if (!_sesh) {
					_sesh = that.closest('.speakerCard');
					inModal = true;
				}
				_id = _sesh.getAttribute('data-id');
				_sesh.classList.toggle('is-fav');
				localStorage.setItem("fav-" + _id, _sesh.classList.contains('is-fav'));

				ga('send', 'event', 'fav', jsmain___si('h4', _sesh).innerText, _sesh.classList.contains('is-fav') ? 'on' : 'off');

				if (inModal) {
					jsmain___si('.sesh[data-id="' + _id + '"]').classList.toggle('is-fav');
				}
			}
		});

		document.addEventListener('keydown', function (e) {
			if (e.keyCode === 27 && modalIsOpen) {
				jsmain___si('.close', speakerCard).click();
			}
		});

		var clipboard = new Clipboard('.exp-fav', {
			text: function text() {
				var ids = [];
				jsmain___s('.sesh.is-fav').forEach(function (elm) {
					ids.push(elm.getAttribute('data-id'));
				});
				return location.origin + location.pathname + '#favs=' + ids.join('+');
			}
		});

		clipboard.on('success', function (e) {
			jsmain___si('.exp-success').style.display = 'block';
		});

		clipboard.on('error', function (e) {
			console.error('clipboard failed', e);
			var ids = [];
			jsmain___s('.sesh.is-fav').forEach(function (elm) {
				ids.push(elm.getAttribute('data-id'));
			});
			prompt('Here, copy this URL', location.href + '#favs=' + ids.join('+'));
		});
	}

	if (window.isMainPage) {
		jsmain__loadJSONP('https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=00622ccfe6e4d518ca49b0b5105abb54&per_page=20&user_id=trondheimdc&tags=Approved&page=2&extras=o_dims&format=json');
	}

	function Mouse(element, callback) {
		this.callback = callback;
		this.element = element;
		this.handler = this.handler.bind(this);
		this.L = this.M = this.R = this.X = this.Y = 0;
		window.addEventListener('mousedown', this.handler);
		window.addEventListener('mouseup', this.handler);
		window.addEventListener('mousemove', this.handler);
	}

	Mouse.prototype.map = { 0: 'L', 1: 'M', 2: 'R' };

	Mouse.prototype.handler = function (e) {
		var b = this.element.getBoundingClientRect();
		this.X = e.clientX - b.left;
		this.Y = e.clientY - b.top;
		switch (e.type) {
			case 'contextmenu':
				e.preventDefault();break;
			case 'mousedown':
				this[this.map[e.button]] = 1;break;
			case 'mouseup':
				this[this.map[e.button]] = 0;break;
		}
		this.callback && this.callback(e);
	};

	function Particle(field, x, y) {
		this.field = field;
		this.l = jsmain___vec2.default.get(x, y);
		this.p = jsmain___vec2.default.get(x, y);
		this.v = jsmain___vec2.default.get();
	}

	Particle.prototype.reset = function (x, y) {
		if (x == null || y == null) if (Math.random() < 0.5) {
			x = this.field.width * Math.random();
			y = this.field.height * (Math.random() + 0.5 | 0);
		} else {
			x = this.field.width * (Math.random() + 0.5 | 0);
			y = this.field.height * Math.random();
		}

		jsmain___vec2.default.set(this.l, x, y);
		jsmain___vec2.default.set(this.p, x, y);
		jsmain___vec2.default.set(this.v);
	};

	Particle.prototype.outOfBounds = function () {
		return this.p[0] < 0 || this.p[0] > this.field.width || this.p[1] < 0 || this.p[1] > this.field.height;
	};

	Particle.prototype.update = function () {
		if (this.outOfBounds()) return;

		var x = 0.00550 * this.p[0];
		var y = 0.00550 * this.p[1];
		var z = 0.0001 * this.field.now;
		var r = Math.random() * 0.5;
		var t = Math.random() * Math.PI * 2;

		jsmain___vec2.default.set(jsmain___vec2.default.buffer, r * Math.sin(t) + this.field.simplex.noise3D(x, y, +z), r * Math.cos(t) + this.field.simplex.noise3D(x, y, -z));
		jsmain___vec2.default.add(this.v, jsmain___vec2.default.buffer, this.v);

		if (this.field.mouse.L) {
			jsmain___vec2.default.set(jsmain___vec2.default.buffer, this.field.mouse.X, this.field.mouse.Y);
			jsmain___vec2.default.sub(jsmain___vec2.default.buffer, this.p, jsmain___vec2.default.buffer);
			jsmain___vec2.default.mul(jsmain___vec2.default.buffer, 0.0010, jsmain___vec2.default.buffer);
			jsmain___vec2.default.add(this.v, jsmain___vec2.default.buffer, this.v);
		}

		jsmain___vec2.default.mul(this.v * 0.5, 0.9500, this.v * 0.5);
		jsmain___vec2.default.set(this.l, this.p, this.l);
		jsmain___vec2.default.add(this.p, this.v, this.p);

		return true;
	};

	function Field(container) {
		this.loop = this.loop.bind(this);
		this.canvas = jsmain___util2.default.tag('canvas', null, container);
		this.info = jsmain___util2.default.tag('code', null, container);
		this.context = this.canvas.getContext('2d');
		this.mouse = new Mouse(this.canvas);
		this.simplex = new jsmain___simplexNoise2.default();
		this.particles = [];
		this.loop();
	}

	Field.prototype.spawn = function () {
		for (var i = Math.round(1e4 / 1.5) - this.particles.length; i--;) {
			this.particles.push(new Particle(this));
		}
	};

	Field.prototype.resize = function () {
		var w = this.canvas.clientWidth;
		var h = this.canvas.clientHeight;
		if (this.canvas.width !== w || this.canvas.height !== h) {
			this.width = this.canvas.width = w;
			this.height = this.canvas.height = h;
			this.clear();
		}
	};

	Field.prototype.clear = function () {
		this.context.fillStyle = jsmain___util2.default.color.rgba(1, 1, 1);
		this.context.fillRect(0, 0, this.width, this.height);
	};

	Field.prototype.render = function () {
		this.context.beginPath();

		for (var p, i = 0; p = this.particles[i++];) {
			if (p.update()) {
				this.context.moveTo(p.l[0], p.l[1]);
				this.context.lineTo(p.p[0], p.p[1]);
			} else p.reset();
		} // this.particles.splice(--i, 1);

		this.context.globalCompositeOperation = 'lighter';
		this.context.strokeStyle = jsmain___util2.default.color.rgba(0.61, 0.76, 0.10, 0.25);
		this.context.stroke();

		this.context.globalCompositeOperation = 'source-over';
		this.context.fillStyle = jsmain___util2.default.color.rgba(0, 0, 0, 0.05);
		this.context.fillRect(0, 0, this.width, this.height);
	};

	Field.prototype.update = function () {
		this.resize();
		this.spawn();
		this.render();
	};

	Field.prototype.loop = function () {
		this.now = Date.now();
		if (this.now - startup < 5000) {
			var fps = jsmain___util2.default.fps(true);
			if (fps < 20) {
				lowFpsCount++;
				if (lowFpsCount > 60) {
					html.classList.add('lowfps');
					setTimeout(function () {
						document.body.removeChild(jsmain___si('canvas'));
					}, 500);
					return;
				}
			} else {
				lowFpsCount = 0;
			}
		}
		requestAnimationFrame(this.loop);
		this.update();
	};

	window.addEventListener('load', function () {
		if (window_width > 600 && location.href.indexOf('program') === -1) {
			new Field(document.body);
		}
	}, false);

	html.classList.remove('no-js');
	if ('ontouchstart' in document) {
		html.classList.add('touch');
	} else {
		html.classList.add('no-touch');
	}
})();
/*≠≠ js/main.js ≠≠*/
})()